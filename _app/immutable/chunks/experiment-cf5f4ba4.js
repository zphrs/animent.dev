import{S as m4,i as C4,s as E4,k as n,q as r,a as D,w as M,W as Ql,l as t,m as p,r as c,h as e,c as i,x as q,X as Rl,n as y,p as E,b as o,F as l,y as H,B as v4,f as W,t as V,z as U}from"./index-dedda207.js";import{P as Q}from"./Previewer-f98dd728.js";function w4(i4){let A,Uo,Yl,B,Js,Qo,Ro,xe,Yo,Kl,ps,Ko,Jl,rs,Jo,Gl,Gs,Go,Nl,R,j,No,Oe,Xo,Zo,Me,zo,sn,en,qe,ln,Xl,cs,Zl,Ds,an,zl,He,y4='<pre class="shiki" style="background-color: #1E1729"><code><span class="line"><span style="color: #86B6EC">console</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">log</span><span style="color: #D4D4D4">(</span><span style="color: #F5C378">&#39;Hello World&#39;</span><span style="color: #D4D4D4">)</span></span></code></pre>',We,is,on,sa,Ns,nn,ea,ys,la,Y,tn,Ve,pn,rn,aa,Ue,h4=`<pre class="shiki" style="background-color: #1E1729"><code><span class="line"><span style="color: #A695F2">for</span><span style="color: #D4D4D4"> (</span><span style="color: #A695F2">let</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">i</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">; </span><span style="color: #86B6EC">i</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">&lt;</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">10</span><span style="color: #D4D4D4">; </span><span style="color: #86B6EC">i</span><span style="color: #ECD47C">++</span><span style="color: #D4D4D4">) {</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// draw one rectangle here!</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span></code></pre>`,Qe,Xs,cn,oa,P,Re,Dn,hs,Ye,yn,hn,fs,na,us,fn,ta,ds,un,pa,Zs,dn,ra,w,mn,Ke,Cn,En,Je,vn,wn,ca,T,Ge,bn,zs,Ne,kn,_n,Da,ms,ia,se,Fn,ya,Cs,An,ha,ee,Bn,fa,Es,ua,b,jn,K,Pn,Tn,J,In,gn,da,vs,$n,ma,le,Ln,Ca,ae,Sn,Ea,oe,xn,va,ws,On,wa,ne,Mn,ba,bs,ka,ks,qn,_a,te,Hn,Fa,_s,Aa,Fs,Wn,Ba,pe,Vn,ja,As,Un,Pa,Bs,Qn,Ta,G,Rn,N,Yn,Kn,Ia,d,re,Jn,Gn,Xe,Nn,Xn,Ze,X,Zn,zn,js,st,Z,et,lt,ga,ce,at,$a,Ps,La,De,ot,Sa,ie,nt,xa,ye,tt,Oa,m,he,pt,ze,sl,rt,ct,el,Dt,it,ll,yt,ht,al,ft,Ma,Ts,ut,qa,fe,dt,Ha,ue,mt,Wa,de,Ct,Va,h,Et,ol,vt,wt,nl,bt,kt,tl,_t,Ft,pl,At,Bt,rl,jt,Pt,cl,Tt,It,Ua,f,gt,Dl,$t,Lt,il,St,xt,yl,Ot,Mt,hl,qt,Ht,Qa,fl,f4=`<pre class="shiki" style="background-color: #1E1729"><code><span class="line"><span style="color: #A695F2">class</span><span style="color: #D4D4D4"> </span><span style="color: #ABA3F1">Controls</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #A695F2">constructor</span><span style="color: #D4D4D4">(</span><span style="color: #86B6EC">up</span><span style="color: #D4D4D4">, </span><span style="color: #86B6EC">left</span><span style="color: #D4D4D4">, </span><span style="color: #86B6EC">down</span><span style="color: #D4D4D4">, </span><span style="color: #86B6EC">right</span><span style="color: #D4D4D4">, </span><span style="color: #86B6EC">toggle</span><span style="color: #D4D4D4">) {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">up</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">up</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">left</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">left</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">down</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">down</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">right</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">right</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">toggle</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">toggle</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">isUp</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">return</span><span style="color: #D4D4D4"> </span><span style="color: #86EC99">keyIsDown</span><span style="color: #D4D4D4">(</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">up</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">isLeft</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">return</span><span style="color: #D4D4D4"> </span><span style="color: #86EC99">keyIsDown</span><span style="color: #D4D4D4">(</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">left</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">isDown</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">return</span><span style="color: #D4D4D4"> </span><span style="color: #86EC99">keyIsDown</span><span style="color: #D4D4D4">(</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">down</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">isRight</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">return</span><span style="color: #D4D4D4"> </span><span style="color: #86EC99">keyIsDown</span><span style="color: #D4D4D4">(</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">right</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span></code></pre>`,ul,k,Wt,dl,Vt,Ut,ml,Qt,Rt,Ra,Cl,u4=`<pre class="shiki" style="background-color: #1E1729"><code><span class="line"><span style="color: #A695F2">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">W</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">87</span></span>
<span class="line"><span style="color: #A695F2">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">A</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">65</span></span>
<span class="line"><span style="color: #A695F2">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">S</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">83</span></span>
<span class="line"><span style="color: #A695F2">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">D</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">68</span></span>
<span class="line"><span style="color: #A695F2">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">Q</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">81</span></span>
<span class="line"></span>
<span class="line"><span style="color: #A695F2">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">WASDQ</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #9CDCFE">up:</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">W</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #9CDCFE">left:</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">A</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #9CDCFE">down:</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">S</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #9CDCFE">right:</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">D</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #9CDCFE">toggle:</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">Q</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ECD47C">new</span><span style="color: #D4D4D4"> </span><span style="color: #86EC99">Controls</span><span style="color: #D4D4D4">(</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #4FC1FF">WASDQ</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">up</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #4FC1FF">WASDQ</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">left</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #4FC1FF">WASDQ</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">down</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #4FC1FF">WASDQ</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">right</span><span style="color: #D4D4D4">,</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #4FC1FF">WASDQ</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">toggle</span></span>
<span class="line"><span style="color: #D4D4D4">)</span></span></code></pre>`,El,z,Yt,vl,Kt,Jt,Ya,wl,d4=`<pre class="shiki" style="background-color: #1E1729"><code><span class="line"><span style="color: #A695F2">class</span><span style="color: #D4D4D4"> </span><span style="color: #ABA3F1">Dot</span><span style="color: #D4D4D4"> {</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86B6EC">position</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86B6EC">velocity</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86B6EC">acceleration</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86B6EC">motion</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #A695F2">constructor</span><span style="color: #D4D4D4">(</span><span style="color: #86B6EC">controls</span><span style="color: #D4D4D4">) {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955">// we initiate our variables like when we had one dot</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955">// so that the dot starts still in the top left corner</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86EC99">createVector</span><span style="color: #D4D4D4">(</span><span style="color: #F59778">0</span><span style="color: #D4D4D4">, </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">velocity</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86EC99">createVector</span><span style="color: #D4D4D4">(</span><span style="color: #F59778">0</span><span style="color: #D4D4D4">, </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">acceleration</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86EC99">createVector</span><span style="color: #D4D4D4">(</span><span style="color: #F59778">0</span><span style="color: #D4D4D4">, </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">motion</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955">// we assume controls is a Controls object created by doing</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955">// new Controls(...)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">controls</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">controls</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// helper function for updateMotion()</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">getVectorBeingChanged</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">switch</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">motion</span><span style="color: #D4D4D4">) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #A695F2">case</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #A695F2">return</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #A695F2">case</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">1</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #A695F2">return</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">velocity</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #A695F2">case</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">2</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #A695F2">return</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">acceleration</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// updates motion</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// relies on the Controls class methods like isLeft, isRight, etc.</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// Also does vector math to figure out the updated position, velocity, and</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// acceleration for the dot.</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">updateMotion</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">vector</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">getVectorBeingChanged</span><span style="color: #D4D4D4">()</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">deltaVector</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86EC99">createVector</span><span style="color: #D4D4D4">(</span><span style="color: #F59778">0</span><span style="color: #D4D4D4">, </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">const</span><span style="color: #D4D4D4"> </span><span style="color: #4FC1FF">amount</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0.1</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">**</span><span style="color: #D4D4D4"> (</span><span style="color: #F59778">1</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">*</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">motion</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">if</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">controls</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">isLeft</span><span style="color: #D4D4D4">()) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #86B6EC">deltaVector</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">-=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">amount</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">if</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">controls</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">isRight</span><span style="color: #D4D4D4">()) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #86B6EC">deltaVector</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">+=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">amount</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">if</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">controls</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">isUp</span><span style="color: #D4D4D4">()) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #86B6EC">deltaVector</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">-=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">amount</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">if</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">controls</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">isDown</span><span style="color: #D4D4D4">()) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #86B6EC">deltaVector</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">+=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">amount</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #86B6EC">vector</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">add</span><span style="color: #D4D4D4">(</span><span style="color: #86B6EC">deltaVector</span><span style="color: #D4D4D4">)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">velocity</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">add</span><span style="color: #D4D4D4">(</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">acceleration</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">add</span><span style="color: #D4D4D4">(</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">velocity</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">keepInBounds</span><span style="color: #D4D4D4">()</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// Maybe toggle motion checks whether the toggle key is the one that was</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// most recently pressed. If so, it calls toggleMotion to change the motion</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// vector that gets changed.</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">maybeToggleMotion</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">if</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">controls</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">toggle</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">===</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">keyCode</span><span style="color: #D4D4D4">) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">toggleMotion</span><span style="color: #D4D4D4">()</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// helper for maybeToggleMotion</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">toggleMotion</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">motion</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">motion</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">+</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">1</span><span style="color: #D4D4D4">) </span><span style="color: #ECD47C">%</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">3</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// helper for updateMotion: keeps the dot on the screen.</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// Resets velocity and acceleration along with position to</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// prevent weird glitchy behavior where you get trapped against a wall.</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">keepInBounds</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">if</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">&lt;</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">velocity</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">acceleration</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">if</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">width</span><span style="color: #D4D4D4">) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">width</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">velocity</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">acceleration</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">if</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">&lt;</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">velocity</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">acceleration</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">if</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">&gt;</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">height</span><span style="color: #D4D4D4">) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #86B6EC">height</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">velocity</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">acceleration</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4"> </span><span style="color: #ECD47C">=</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// helper for draw()</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">getMotionAsText</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #A695F2">switch</span><span style="color: #D4D4D4"> (</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">motion</span><span style="color: #D4D4D4">) {</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #A695F2">case</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #A695F2">return</span><span style="color: #D4D4D4"> </span><span style="color: #F5C378">&#39;position&#39;</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #A695F2">case</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">1</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #A695F2">return</span><span style="color: #D4D4D4"> </span><span style="color: #F5C378">&#39;velocity&#39;</span><span style="color: #D4D4D4"> </span><span style="color: #6A9955">// first derivative - a preview of college math</span></span>
<span class="line"><span style="color: #D4D4D4">      </span><span style="color: #A695F2">case</span><span style="color: #D4D4D4"> </span><span style="color: #F59778">2</span><span style="color: #D4D4D4">:</span></span>
<span class="line"><span style="color: #D4D4D4">        </span><span style="color: #A695F2">return</span><span style="color: #D4D4D4"> </span><span style="color: #F5C378">&#39;acceleration&#39;</span><span style="color: #D4D4D4"> </span><span style="color: #6A9955">// second derivative</span></span>
<span class="line"><span style="color: #D4D4D4">    }</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// uses the variables in the class to draw out the dot along with the various</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">// vector variables inside the class and the current motion mode.</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #86EC99">draw</span><span style="color: #D4D4D4">() {</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #86EC99">fill</span><span style="color: #D4D4D4">(</span><span style="color: #F59778">0</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #86EC99">ellipse</span><span style="color: #D4D4D4">(</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4">, </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4">, </span><span style="color: #F59778">10</span><span style="color: #D4D4D4">, </span><span style="color: #F59778">10</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #6A9955">// draw lines to show the vectors</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #86EC99">drawVector</span><span style="color: #D4D4D4">(</span><span style="color: #86EC99">createVector</span><span style="color: #D4D4D4">(</span><span style="color: #F59778">0</span><span style="color: #D4D4D4">, </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">), </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">, </span><span style="color: #F5C378">&#39;black&#39;</span><span style="color: #D4D4D4">, </span><span style="color: #F59778">0</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #86EC99">drawVector</span><span style="color: #D4D4D4">(</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">, </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">velocity</span><span style="color: #D4D4D4">, </span><span style="color: #F5C378">&#39;red&#39;</span><span style="color: #D4D4D4">, </span><span style="color: #F59778">1</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #86EC99">drawVector</span><span style="color: #D4D4D4">(</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">, </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">acceleration</span><span style="color: #D4D4D4">, </span><span style="color: #F5C378">&#39;blue&#39;</span><span style="color: #D4D4D4">, </span><span style="color: #F59778">2</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #86EC99">stroke</span><span style="color: #D4D4D4">(</span><span style="color: #F59778">0</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">    </span><span style="color: #86EC99">text</span><span style="color: #D4D4D4">(</span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86EC99">getMotionAsText</span><span style="color: #D4D4D4">(), </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">x</span><span style="color: #D4D4D4">, </span><span style="color: #ECD47C">this</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">position</span><span style="color: #D4D4D4">.</span><span style="color: #86B6EC">y</span><span style="color: #D4D4D4">)</span></span>
<span class="line"><span style="color: #D4D4D4">  }</span></span>
<span class="line"><span style="color: #D4D4D4">}</span></span></code></pre>`,bl,Is,Ka,v,me,Gt,Nt,kl,Xt,Zt,_l,zt,Ja,gs,sp,Ga,$s,ep,Na,Ce,lp,Xa,Ls,ap,Za,Ee,op,za,I,Fl,np,Al,tp,so,Ss,pp,eo,ve,rp,lo,g,Bl,cp,jl,Dp,ao,xs,ip,oo,Os,yp,no,we,hp,to,$,Pl,fp,Ms,up,Tl,dp,mp,po,qs,Cp,ro,be,Ep,co,L,Il,vp,gl,wp,Do,S,$l,bp,Ll,kp,io,Hs,_p,yo,Ws,Fp,ho,ke,Ap,fo,C,_,Bp,ss,jp,Pp,es,Tp,Ip,Sl,_e,gp,Vs,Fe,$p,ls,Lp,Sp,xl,xp,Op,Ol,Mp,qp,Ae,Hp,Ml,ql,Wp,Vp,Be,Up,Us,Hl,Qp,Rp,Qs,Yp,as,Kp,Jp,uo,x,je,Gp,Np,Wl,Xp,mo,Rs,Zp,Co,Pe,zp,Eo,O,Vl,sr,Ul,er,vo,Ys,lr,wo,Te,ar,bo;return cs=new Q({props:{root:"/experiment/d1/a1/index.html",paths:["/experiment/d1/a1/punchline.html"]}}),ys=new Q({props:{root:"/experiment/d1/a3/square.html",paths:["/experiment/d1/a3/square.js"]}}),fs=new Q({props:{root:"/experiment/d1/a3/squares.html",paths:["/experiment/d1/a3/squares.js"]}}),ms=new Q({props:{root:"/experiment/d2/a1/rect.html",paths:["/experiment/d2/a1/square.js"]}}),Es=new Q({props:{root:"/experiment/d2/a2/fancy.html",paths:["/experiment/d2/a2/fancy.js"]}}),bs=new Q({props:{root:"/experiment/d2/a3/player.html",paths:["/experiment/d2/a3/player.js"]}}),_s=new Q({props:{root:"/experiment/d2/a3/parallax.html",paths:["/experiment/d2/a3/parallax.js"]}}),Ps=new Q({props:{root:"/experiment/d3/l1/motion.html",paths:["/experiment/d3/l1/motion.js"]}}),Is=new Q({props:{root:"/experiment/d3/l2/dots.html",paths:["/experiment/d3/l2/dots.js"]}}),{c(){A=n("h1"),Uo=r("Experiment"),Yl=D(),B=n("blockquote"),Js=n("p"),Qo=r("Warning!"),Ro=D(),xe=n("p"),Yo=r("This section is not complete yet. It will likely be completed around the end of February."),Kl=D(),ps=n("h2"),Ko=r("Day 1: Review + intro to JS"),Jl=D(),rs=n("h3"),Jo=r("Activity 1: Review HTML + CSS (15 mins)"),Gl=D(),Gs=n("p"),Go=r("Edit the HTML files below to do two things:"),Nl=D(),R=n("ol"),j=n("li"),No=r("Make it look better with different fonts, colors (especially the "),Oe=n("code"),Xo=r("background-color"),Zo=r(" and the link "),Me=n("code"),zo=r("color"),sn=r("), along with any other CSS you like."),en=D(),qe=n("li"),ln=r("Replace the joke with your own! Feel free to add in images or other HTML elements if you’d like."),Xl=D(),M(cs.$$.fragment),Zl=D(),Ds=n("h3"),an=r("Activity 2: Hello World with JS (5 mins)"),zl=D(),He=new Ql(!1),We=D(),is=n("h3"),on=r("Activity 3: Introduce JS + JS Canvas (40 mins)"),sa=D(),Ns=n("p"),nn=r("Start by drawing one rectangle to the js canvas. It can be a square, like the one shown below, or it can be a rectangle of your choosing. You can change the background color and the rectangle number to whatever you’d like."),ea=D(),M(ys.$$.fragment),la=D(),Y=n("p"),tn=r("Then draw 10 rectangles onto the canvas using a "),Ve=n("code"),pn=r("for"),rn=r(" loop:"),aa=D(),Ue=new Ql(!1),Qe=D(),Xs=n("p"),cn=r("If you’re feeling inspired, play around and see what you can make!"),oa=D(),P=n("blockquote"),Re=n("p"),Dn=D(),hs=n("details"),Ye=n("summary"),yn=r("Show Example"),hn=D(),M(fs.$$.fragment),na=D(),us=n("h2"),fn=r("Day 2: P5.js animations"),ta=D(),ds=n("h3"),un=r("Activity 1: P5.js drawing (15 mins)"),pa=D(),Zs=n("p"),dn=r("Here’s a duplicate of the first square we drew, this time using the P5.js library."),ra=D(),w=n("p"),mn=r("Note the script import on line 10 with "),Ke=n("code"),Cn=r('src="../../p5.js"'),En=r(" inside of the "),Je=n("code"),vn=r("rect.html"),wn=r(" on line 10. This imports the p5.js library."),ca=D(),T=n("blockquote"),Ge=n("p"),bn=D(),zs=n("details"),Ne=n("summary"),kn=r("What are libraries?"),_n=r("\nA library in programming is a collection of `code` such as `functions` and `classes` which are designed to make other programmers' jobs easier (we'll cover classes tomorrow).\nYou don't have to read all of the code inside of `p5.js` to use the library, you can simply call the functions laid out in the [p5.js documentation](https://p5js.org/reference/) and trust that the library will take care of the rest."),Da=D(),M(ms.$$.fragment),ia=D(),se=n("p"),Fn=r("Be a little rebelious! Make the square a rectangle! I won’t try to stop ya ;)"),ya=D(),Cs=n("h3"),An=r("Activity 2: P5.js animating (15 mins)"),ha=D(),ee=n("p"),Bn=r("Here’s a fancy animation! Ooooohhhh aaaaaaaa"),fa=D(),M(Es.$$.fragment),ua=D(),b=n("p"),jn=r(`See if you can make a better animation! Remember to use
`),K=n("a"),Pn=r("replit.com"),Tn=r(`’s
`),J=n("a"),In=r("p5.js template"),gn=r("!"),da=D(),vs=n("h3"),$n=r("Activity 3: P5.js interactivity (30 mins)"),ma=D(),le=n("p"),Ln=r("Now we get to the real fun part! Interactivity!"),Ca=D(),ae=n("p"),Sn=r(`In level 1 you might have been frustrated that we couldn’t interact with the fancy
CSS animations. Kind of boring, I know. Well worry no longer! In JavaScript we
can listen to keyboard and mouse events and react to them! Basically the
computer knows when you clack on keys or move the mouse and do cool stuff when
you do!`),Ea=D(),oe=n("p"),xn=r(`This is the start to building a fully interactive UI, like the one you’re using
to read and code on!`),va=D(),ws=n("h4"),On=r("Keyboard Input"),wa=D(),ne=n("p"),Mn=r("Try using WASD to make sooo many copies of our good frind, the square."),ba=D(),M(bs.$$.fragment),ka=D(),ks=n("h4"),qn=r("Mouse Input"),_a=D(),te=n("p"),Hn=r("Try moving around the mouse! Fancy, I know!"),Fa=D(),M(_s.$$.fragment),Aa=D(),Fs=n("h2"),Wn=r("Day 3: Vectors and Objects!"),Ba=D(),pe=n("p"),Vn=r(`Today we get to learn about what makes every video game possible: vectors and
objects.`),ja=D(),As=n("h3"),Un=r("Lesson 1: Vectors (45 mins)"),Pa=D(),Bs=n("h4"),Qn=r("Why Learn Vectors?"),Ta=D(),G=n("p"),Rn=r(`Vectors are used constantly in video games and other art to define motion for
characters including rotation, position, and change in motion over time,
`),N=n("a"),Yn=r("raytracing"),Kn=r(` to simulate realistic lighting,
particle simulations, fancy graphics, anything involving graphics, and more!`),Ia=D(),d=n("blockquote"),re=n("p"),Jn=r("Additional (longer) Resources!"),Gn=D(),Xe=n("p"),Nn=r("A deeper dive into vectors specifically applied to video game design!"),Xn=D(),Ze=n("p"),X=n("a"),Zn=r("Vectors & Dot Product • Math for Game Devs [Part 1]"),zn=D(),js=n("p"),st=r("Also A "),Z=n("a"),et=r("deeper dive into raytracing"),lt=r(` specifically
for real time rendering meaning all the calculations must happen every 16-4
milliseconds (that’s 1/1000 of a second!). I strongly recommend watching the
first video before watching the second video on ray tracing.`),ga=D(),ce=n("p"),at=r("Here’s an example which shows how to represent motion using vectors:"),$a=D(),M(Ps.$$.fragment),La=D(),De=n("p"),ot=r("Playing around with the demo above should give you an intuitive feel for vectors."),Sa=D(),ie=n("p"),nt=r(`The dot’s position (represented with the black line), velocity
(represented with the red line), and acceleration (represented with the blue line),
are controlled with the WASD keys depending on which mode is active. You can switch
modes with the spacebar.`),xa=D(),ye=n("p"),tt=r("A few things to try:"),Oa=D(),m=n("ul"),he=n("li"),pt=r(`Try setting the velocity to a low value by tapping the ‘w’ key while on ‘velocity’
mode and then “fight” the velocity with your position by holding the “s” key while
on the ‘position’ mode.`),ze=n("ul"),sl=n("li"),rt=r(`Similarly try setting the acceleration to a low value and then
“fight” the acceleration with your velocity.`),ct=D(),el=n("li"),Dt=r("Try to define position, velocity, and acceleration."),it=D(),ll=n("li"),yt=r(`Think about how the relationship between position and velocity is similar
to the relationship between velocity and acceleration.`),ht=D(),al=n("li"),ft=r(`Think of game ideas you could make using position, velocity, and
acceleration as player-controlled values.`),Ma=D(),Ts=n("h3"),ut=r("Lesson 2: Classes (15 mins)"),qa=D(),fe=n("p"),dt=r(`Classes are like a blueprint for making objects. Objects are just fancy clusters
of the same old variables you’re used to. Once we have the blueprint for one dot
we can make 2, or 3, or 100, or 1000 or however many we want.`),Ha=D(),ue=n("p"),mt=r(`That way we can make millions of dots!
Muhahahaha!`),Wa=D(),de=n("p"),Ct=r("We’ll start with two though."),Va=D(),h=n("p"),Et=r(`In this case, we’re clustering together
our `),ol=n("code"),vt=r("position"),wt=r(", "),nl=n("code"),bt=r("velocity"),kt=r(", "),tl=n("code"),_t=r("acceleration"),Ft=r(", and "),pl=n("code"),At=r("mode"),Bt=r(` variables into one class
which includes the functions we made that use those four variables like `),rl=n("code"),jt=r("draw"),Pt=r(`
and `),cl=n("code"),Tt=r("updateMotion"),It=r(` along with the helper functions that help us draw a dot and
update a dot’s motion.`),Ua=D(),f=n("p"),gt=r(`We’ll also cluster controls into a class so that we can have one user use
WASD and Q to control their dot while the other user uses IJKL and O to control
theirs. That class is a little easier to write because all we need to know is
which keys we’d like to associate with `),Dl=n("code"),$t=r("up"),Lt=r(", "),il=n("code"),St=r("down"),xt=r(", "),yl=n("code"),Ot=r("left"),Mt=r(", and "),hl=n("code"),qt=r("right"),Ht=r(` along
with a way to check if they’re pressed:`),Qa=D(),fl=new Ql(!1),ul=D(),k=n("p"),Wt=r("Then to create a control scheme it’s just one function call with the fancy "),dl=n("code"),Vt=r("new"),Ut=r(`
keyword next to it because we’re creating some `),ml=n("code"),Qt=r("new"),Rt=r(" controls."),Ra=D(),Cl=new Ql(!1),El=D(),z=n("p"),Yt=r("Now onto the "),vl=n("code"),Kt=r("Dot"),Jt=r(" class:"),Ya=D(),wl=new Ql(!1),bl=D(),M(Is.$$.fragment),Ka=D(),v=n("blockquote"),me=n("p"),Gt=r("Try"),Nt=D(),kl=n("p"),Xt=r(`Try changing the default position of the dots so that they start somewhere other
than the top left! For an extra challenge, see if you can get them to start in the
center of the screen.`),Zt=D(),_l=n("p"),zt=r(`Try adding another mode or two to the dots! Maybe make an AI mode which chases the other
dot around or a gravity mode which sets acceleration to always be negative and then
lets you try to “fight” against the gravity by changing the acceleration with WASD.`),Ja=D(),gs=n("h2"),sp=r("Day 4: Move!"),Ga=D(),$s=n("h3"),ep=r("Activity 1: Dinosaur Game Clone (60 mins)"),Na=D(),Ce=n("p"),lp=r(`This activity is difficult! I want you to try each class on your own for 5 minutes.
I’ll go over the Player class 5 minutes into the class.`),Xa=D(),Ls=n("h4"),ap=r("Player Class"),Za=D(),Ee=n("p"),op=r(`Make a player controller for a P5.js rectangle with a player class that lets the player jump.
Also have a drawn function like we learned yesterday. The player should only move up and down,
not left and right.`),za=D(),I=n("blockquote"),Fl=n("p"),np=D(),Al=n("p"),tp=r(`A jump can be performed by setting velocity to be a high value while having
acceleration be negative. Then when you hit the bottom of the screen set both velocity
and acceleration to 0.`),so=D(),Ss=n("h4"),pp=r("Cactus/Spike class"),eo=D(),ve=n("p"),rp=r("Make a cactus class that draws a cactus and moves to the left. Have 2-3 cacti that move at different speeds."),lo=D(),g=n("blockquote"),Bl=n("p"),cp=D(),jl=n("p"),Dp=r(`You can reuse cacti by teleporting cacti which they reach the far left of the screen
back to the far right of the screen.`),ao=D(),xs=n("h4"),ip=r("Game Loop"),oo=D(),Os=n("h5"),yp=r("Points"),no=D(),we=n("p"),hp=r(`When a cactus gets to the other side of the screen the player should get a point for successfully dodging the cactus. For an extra challenge, make the player get the point as soon as the cactus
passes the player.`),to=D(),$=n("blockquote"),Pl=n("p"),fp=D(),Ms=n("p"),up=r("You can use a "),Tl=n("code"),dp=r("this"),mp=r(" variable like we did for the 1 dot example from yesterday."),po=D(),qs=n("h5"),Cp=r("Collision Detection/Game Over"),ro=D(),be=n("p"),Ep=r("Make a collision detection function that checks if the player is touching the cactus. If the player is touching the cactus, the game should end."),co=D(),L=n("blockquote"),Il=n("p"),vp=D(),gl=n("p"),wp=r(`How can you tell when two rectangles intersect?
Try drawing this out on paper first!`),Do=D(),S=n("blockquote"),$l=n("p"),bp=D(),Ll=n("p"),kp=r("Try making an end screen rather than just making the game end."),io=D(),Hs=n("h2"),_p=r("Day 5: Your Turn!"),yo=D(),Ws=n("h3"),Fp=r("Draft experiment (5 mins)"),ho=D(),ke=n("p"),Ap=r("Here’s some ideas of projects you could make!"),fo=D(),C=n("ul"),_=n("li"),Bp=r(`A drawing app! Track the mouse using
`),ss=n("a"),jp=r("mouseX"),Pp=r(` and
`),es=n("a"),Tp=r("mouseY"),Ip=r(` and only draw the background
inside of the setup function. That way you can draw a circle wherever the
mouse is on each draw frame.`),Sl=n("ul"),_e=n("li"),gp=r("Additional challenges:"),Vs=n("ul"),Fe=n("li"),$p=r(`Only draw circles when
`),ls=n("a"),Lp=r("mouseIsPressed"),Sp=D(),xl=n("li"),xp=r("Let the user select different colors by typing keys on the keyboard."),Op=D(),Ol=n("li"),Mp=r(`Another game! Maybe a jetpack game where you collect coins (yellow colored circles)?
Maybe something else?`),qp=D(),Ae=n("li"),Hp=r(`Click the button challenge! Teleport a button around the screen and see how
many clicks someone can make in 3600 draw calls. After 3600 draw calls, show
the user an end screen! (3600 draw calls is around 60 seconds).`),Ml=n("ul"),ql=n("li"),Wp=r(`It shouldn’t be too hard to figure out when a point will be inside of a
rectangle after doing the harder version of figuring out when two rectangles
are intersecting from yesterday.`),Vp=D(),Be=n("li"),Up=r("Anything else you can think of!"),Us=n("ul"),Hl=n("li"),Qp=r("I’ll try to help everyone get progress on their projects as much as I can!"),Rp=D(),Qs=n("li"),Yp=r("Remember! The "),as=n("a"),Kp=r("P5.js docs"),Jp=r(" are your friend!"),uo=D(),x=n("blockquote"),je=n("p"),Gp=r("Warning"),Np=D(),Wl=n("p"),Xp=r(`Make sure to limit the scope of the project! You’ll only have 40 minutes to
make the project, so be sure to get the basic functionality down before focusing
on the smaller less important details.`),mo=D(),Rs=n("h3"),Zp=r("Make project (40 mins)"),Co=D(),Pe=n("p"),zp=r("Code up the project!"),Eo=D(),O=n("blockquote"),Vl=n("p"),sr=D(),Ul=n("p"),er=r("Ask for help when you get stuck! We are here to help!"),vo=D(),Ys=n("h3"),lr=r("Share/present projects (15 mins)"),wo=D(),Te=n("p"),ar=r("Share what you’ve made!"),this.h()},l(s){A=t(s,"H1",{id:!0});var a=p(A);Uo=c(a,"Experiment"),a.forEach(e),Yl=i(s),B=t(s,"BLOCKQUOTE",{class:!0});var ko=p(B);Js=t(ko,"P",{style:!0});var Dr=p(Js);Qo=c(Dr,"Warning!"),Dr.forEach(e),Ro=i(ko),xe=t(ko,"P",{});var ir=p(xe);Yo=c(ir,"This section is not complete yet. It will likely be completed around the end of February."),ir.forEach(e),ko.forEach(e),Kl=i(s),ps=t(s,"H2",{id:!0});var yr=p(ps);Ko=c(yr,"Day 1: Review + intro to JS"),yr.forEach(e),Jl=i(s),rs=t(s,"H3",{id:!0});var hr=p(rs);Jo=c(hr,"Activity 1: Review HTML + CSS (15 mins)"),hr.forEach(e),Gl=i(s),Gs=t(s,"P",{});var fr=p(Gs);Go=c(fr,"Edit the HTML files below to do two things:"),fr.forEach(e),Nl=i(s),R=t(s,"OL",{});var _o=p(R);j=t(_o,"LI",{});var Ie=p(j);No=c(Ie,"Make it look better with different fonts, colors (especially the "),Oe=t(Ie,"CODE",{});var ur=p(Oe);Xo=c(ur,"background-color"),ur.forEach(e),Zo=c(Ie," and the link "),Me=t(Ie,"CODE",{});var dr=p(Me);zo=c(dr,"color"),dr.forEach(e),sn=c(Ie,"), along with any other CSS you like."),Ie.forEach(e),en=i(_o),qe=t(_o,"LI",{});var mr=p(qe);ln=c(mr,"Replace the joke with your own! Feel free to add in images or other HTML elements if you’d like."),mr.forEach(e),_o.forEach(e),Xl=i(s),q(cs.$$.fragment,s),Zl=i(s),Ds=t(s,"H3",{id:!0});var Cr=p(Ds);an=c(Cr,"Activity 2: Hello World with JS (5 mins)"),Cr.forEach(e),zl=i(s),He=Rl(s,!1),We=i(s),is=t(s,"H3",{id:!0});var Er=p(is);on=c(Er,"Activity 3: Introduce JS + JS Canvas (40 mins)"),Er.forEach(e),sa=i(s),Ns=t(s,"P",{});var vr=p(Ns);nn=c(vr,"Start by drawing one rectangle to the js canvas. It can be a square, like the one shown below, or it can be a rectangle of your choosing. You can change the background color and the rectangle number to whatever you’d like."),vr.forEach(e),ea=i(s),q(ys.$$.fragment,s),la=i(s),Y=t(s,"P",{});var Fo=p(Y);tn=c(Fo,"Then draw 10 rectangles onto the canvas using a "),Ve=t(Fo,"CODE",{});var wr=p(Ve);pn=c(wr,"for"),wr.forEach(e),rn=c(Fo," loop:"),Fo.forEach(e),aa=i(s),Ue=Rl(s,!1),Qe=i(s),Xs=t(s,"P",{});var br=p(Xs);cn=c(br,"If you’re feeling inspired, play around and see what you can make!"),br.forEach(e),oa=i(s),P=t(s,"BLOCKQUOTE",{class:!0});var Ao=p(P);Re=t(Ao,"P",{style:!0}),p(Re).forEach(e),Dn=i(Ao),hs=t(Ao,"DETAILS",{});var Bo=p(hs);Ye=t(Bo,"SUMMARY",{});var kr=p(Ye);yn=c(kr,"Show Example"),kr.forEach(e),hn=i(Bo),q(fs.$$.fragment,Bo),Bo.forEach(e),Ao.forEach(e),na=i(s),us=t(s,"H2",{id:!0});var _r=p(us);fn=c(_r,"Day 2: P5.js animations"),_r.forEach(e),ta=i(s),ds=t(s,"H3",{id:!0});var Fr=p(ds);un=c(Fr,"Activity 1: P5.js drawing (15 mins)"),Fr.forEach(e),pa=i(s),Zs=t(s,"P",{});var Ar=p(Zs);dn=c(Ar,"Here’s a duplicate of the first square we drew, this time using the P5.js library."),Ar.forEach(e),ra=i(s),w=t(s,"P",{});var ge=p(w);mn=c(ge,"Note the script import on line 10 with "),Ke=t(ge,"CODE",{});var Br=p(Ke);Cn=c(Br,'src="../../p5.js"'),Br.forEach(e),En=c(ge," inside of the "),Je=t(ge,"CODE",{});var jr=p(Je);vn=c(jr,"rect.html"),jr.forEach(e),wn=c(ge," on line 10. This imports the p5.js library."),ge.forEach(e),ca=i(s),T=t(s,"BLOCKQUOTE",{class:!0});var jo=p(T);Ge=t(jo,"P",{style:!0}),p(Ge).forEach(e),bn=i(jo),zs=t(jo,"DETAILS",{});var or=p(zs);Ne=t(or,"SUMMARY",{});var Pr=p(Ne);kn=c(Pr,"What are libraries?"),Pr.forEach(e),_n=c(or,"\nA library in programming is a collection of `code` such as `functions` and `classes` which are designed to make other programmers' jobs easier (we'll cover classes tomorrow).\nYou don't have to read all of the code inside of `p5.js` to use the library, you can simply call the functions laid out in the [p5.js documentation](https://p5js.org/reference/) and trust that the library will take care of the rest."),or.forEach(e),jo.forEach(e),Da=i(s),q(ms.$$.fragment,s),ia=i(s),se=t(s,"P",{});var Tr=p(se);Fn=c(Tr,"Be a little rebelious! Make the square a rectangle! I won’t try to stop ya ;)"),Tr.forEach(e),ya=i(s),Cs=t(s,"H3",{id:!0});var Ir=p(Cs);An=c(Ir,"Activity 2: P5.js animating (15 mins)"),Ir.forEach(e),ha=i(s),ee=t(s,"P",{});var gr=p(ee);Bn=c(gr,"Here’s a fancy animation! Ooooohhhh aaaaaaaa"),gr.forEach(e),fa=i(s),q(Es.$$.fragment,s),ua=i(s),b=t(s,"P",{});var $e=p(b);jn=c($e,`See if you can make a better animation! Remember to use
`),K=t($e,"A",{href:!0,rel:!0,target:!0});var $r=p(K);Pn=c($r,"replit.com"),$r.forEach(e),Tn=c($e,`’s
`),J=t($e,"A",{href:!0,rel:!0,target:!0});var Lr=p(J);In=c(Lr,"p5.js template"),Lr.forEach(e),gn=c($e,"!"),$e.forEach(e),da=i(s),vs=t(s,"H3",{id:!0});var Sr=p(vs);$n=c(Sr,"Activity 3: P5.js interactivity (30 mins)"),Sr.forEach(e),ma=i(s),le=t(s,"P",{});var xr=p(le);Ln=c(xr,"Now we get to the real fun part! Interactivity!"),xr.forEach(e),Ca=i(s),ae=t(s,"P",{});var Or=p(ae);Sn=c(Or,`In level 1 you might have been frustrated that we couldn’t interact with the fancy
CSS animations. Kind of boring, I know. Well worry no longer! In JavaScript we
can listen to keyboard and mouse events and react to them! Basically the
computer knows when you clack on keys or move the mouse and do cool stuff when
you do!`),Or.forEach(e),Ea=i(s),oe=t(s,"P",{});var Mr=p(oe);xn=c(Mr,`This is the start to building a fully interactive UI, like the one you’re using
to read and code on!`),Mr.forEach(e),va=i(s),ws=t(s,"H4",{id:!0});var qr=p(ws);On=c(qr,"Keyboard Input"),qr.forEach(e),wa=i(s),ne=t(s,"P",{});var Hr=p(ne);Mn=c(Hr,"Try using WASD to make sooo many copies of our good frind, the square."),Hr.forEach(e),ba=i(s),q(bs.$$.fragment,s),ka=i(s),ks=t(s,"H4",{id:!0});var Wr=p(ks);qn=c(Wr,"Mouse Input"),Wr.forEach(e),_a=i(s),te=t(s,"P",{});var Vr=p(te);Hn=c(Vr,"Try moving around the mouse! Fancy, I know!"),Vr.forEach(e),Fa=i(s),q(_s.$$.fragment,s),Aa=i(s),Fs=t(s,"H2",{id:!0});var Ur=p(Fs);Wn=c(Ur,"Day 3: Vectors and Objects!"),Ur.forEach(e),Ba=i(s),pe=t(s,"P",{});var Qr=p(pe);Vn=c(Qr,`Today we get to learn about what makes every video game possible: vectors and
objects.`),Qr.forEach(e),ja=i(s),As=t(s,"H3",{id:!0});var Rr=p(As);Un=c(Rr,"Lesson 1: Vectors (45 mins)"),Rr.forEach(e),Pa=i(s),Bs=t(s,"H4",{id:!0});var Yr=p(Bs);Qn=c(Yr,"Why Learn Vectors?"),Yr.forEach(e),Ta=i(s),G=t(s,"P",{});var Po=p(G);Rn=c(Po,`Vectors are used constantly in video games and other art to define motion for
characters including rotation, position, and change in motion over time,
`),N=t(Po,"A",{href:!0,rel:!0,target:!0});var Kr=p(N);Yn=c(Kr,"raytracing"),Kr.forEach(e),Kn=c(Po,` to simulate realistic lighting,
particle simulations, fancy graphics, anything involving graphics, and more!`),Po.forEach(e),Ia=i(s),d=t(s,"BLOCKQUOTE",{class:!0});var os=p(d);re=t(os,"P",{style:!0});var Jr=p(re);Jn=c(Jr,"Additional (longer) Resources!"),Jr.forEach(e),Gn=i(os),Xe=t(os,"P",{});var Gr=p(Xe);Nn=c(Gr,"A deeper dive into vectors specifically applied to video game design!"),Gr.forEach(e),Xn=i(os),Ze=t(os,"P",{});var Nr=p(Ze);X=t(Nr,"A",{href:!0,rel:!0,target:!0});var Xr=p(X);Zn=c(Xr,"Vectors & Dot Product • Math for Game Devs [Part 1]"),Xr.forEach(e),Nr.forEach(e),zn=i(os),js=t(os,"P",{});var To=p(js);st=c(To,"Also A "),Z=t(To,"A",{href:!0,rel:!0,target:!0});var Zr=p(Z);et=c(Zr,"deeper dive into raytracing"),Zr.forEach(e),lt=c(To,` specifically
for real time rendering meaning all the calculations must happen every 16-4
milliseconds (that’s 1/1000 of a second!). I strongly recommend watching the
first video before watching the second video on ray tracing.`),To.forEach(e),os.forEach(e),ga=i(s),ce=t(s,"P",{});var zr=p(ce);at=c(zr,"Here’s an example which shows how to represent motion using vectors:"),zr.forEach(e),$a=i(s),q(Ps.$$.fragment,s),La=i(s),De=t(s,"P",{});var sc=p(De);ot=c(sc,"Playing around with the demo above should give you an intuitive feel for vectors."),sc.forEach(e),Sa=i(s),ie=t(s,"P",{});var ec=p(ie);nt=c(ec,`The dot’s position (represented with the black line), velocity
(represented with the red line), and acceleration (represented with the blue line),
are controlled with the WASD keys depending on which mode is active. You can switch
modes with the spacebar.`),ec.forEach(e),xa=i(s),ye=t(s,"P",{});var lc=p(ye);tt=c(lc,"A few things to try:"),lc.forEach(e),Oa=i(s),m=t(s,"UL",{});var ns=p(m);he=t(ns,"LI",{});var nr=p(he);pt=c(nr,`Try setting the velocity to a low value by tapping the ‘w’ key while on ‘velocity’
mode and then “fight” the velocity with your position by holding the “s” key while
on the ‘position’ mode.`),ze=t(nr,"UL",{});var ac=p(ze);sl=t(ac,"LI",{});var oc=p(sl);rt=c(oc,`Similarly try setting the acceleration to a low value and then
“fight” the acceleration with your velocity.`),oc.forEach(e),ac.forEach(e),nr.forEach(e),ct=i(ns),el=t(ns,"LI",{});var nc=p(el);Dt=c(nc,"Try to define position, velocity, and acceleration."),nc.forEach(e),it=i(ns),ll=t(ns,"LI",{});var tc=p(ll);yt=c(tc,`Think about how the relationship between position and velocity is similar
to the relationship between velocity and acceleration.`),tc.forEach(e),ht=i(ns),al=t(ns,"LI",{});var pc=p(al);ft=c(pc,`Think of game ideas you could make using position, velocity, and
acceleration as player-controlled values.`),pc.forEach(e),ns.forEach(e),Ma=i(s),Ts=t(s,"H3",{id:!0});var rc=p(Ts);ut=c(rc,"Lesson 2: Classes (15 mins)"),rc.forEach(e),qa=i(s),fe=t(s,"P",{});var cc=p(fe);dt=c(cc,`Classes are like a blueprint for making objects. Objects are just fancy clusters
of the same old variables you’re used to. Once we have the blueprint for one dot
we can make 2, or 3, or 100, or 1000 or however many we want.`),cc.forEach(e),Ha=i(s),ue=t(s,"P",{});var Dc=p(ue);mt=c(Dc,`That way we can make millions of dots!
Muhahahaha!`),Dc.forEach(e),Wa=i(s),de=t(s,"P",{});var ic=p(de);Ct=c(ic,"We’ll start with two though."),ic.forEach(e),Va=i(s),h=t(s,"P",{});var u=p(h);Et=c(u,`In this case, we’re clustering together
our `),ol=t(u,"CODE",{});var yc=p(ol);vt=c(yc,"position"),yc.forEach(e),wt=c(u,", "),nl=t(u,"CODE",{});var hc=p(nl);bt=c(hc,"velocity"),hc.forEach(e),kt=c(u,", "),tl=t(u,"CODE",{});var fc=p(tl);_t=c(fc,"acceleration"),fc.forEach(e),Ft=c(u,", and "),pl=t(u,"CODE",{});var uc=p(pl);At=c(uc,"mode"),uc.forEach(e),Bt=c(u,` variables into one class
which includes the functions we made that use those four variables like `),rl=t(u,"CODE",{});var dc=p(rl);jt=c(dc,"draw"),dc.forEach(e),Pt=c(u,`
and `),cl=t(u,"CODE",{});var mc=p(cl);Tt=c(mc,"updateMotion"),mc.forEach(e),It=c(u,` along with the helper functions that help us draw a dot and
update a dot’s motion.`),u.forEach(e),Ua=i(s),f=t(s,"P",{});var F=p(f);gt=c(F,`We’ll also cluster controls into a class so that we can have one user use
WASD and Q to control their dot while the other user uses IJKL and O to control
theirs. That class is a little easier to write because all we need to know is
which keys we’d like to associate with `),Dl=t(F,"CODE",{});var Cc=p(Dl);$t=c(Cc,"up"),Cc.forEach(e),Lt=c(F,", "),il=t(F,"CODE",{});var Ec=p(il);St=c(Ec,"down"),Ec.forEach(e),xt=c(F,", "),yl=t(F,"CODE",{});var vc=p(yl);Ot=c(vc,"left"),vc.forEach(e),Mt=c(F,", and "),hl=t(F,"CODE",{});var wc=p(hl);qt=c(wc,"right"),wc.forEach(e),Ht=c(F,` along
with a way to check if they’re pressed:`),F.forEach(e),Qa=i(s),fl=Rl(s,!1),ul=i(s),k=t(s,"P",{});var Le=p(k);Wt=c(Le,"Then to create a control scheme it’s just one function call with the fancy "),dl=t(Le,"CODE",{});var bc=p(dl);Vt=c(bc,"new"),bc.forEach(e),Ut=c(Le,`
keyword next to it because we’re creating some `),ml=t(Le,"CODE",{});var kc=p(ml);Qt=c(kc,"new"),kc.forEach(e),Rt=c(Le," controls."),Le.forEach(e),Ra=i(s),Cl=Rl(s,!1),El=i(s),z=t(s,"P",{});var Io=p(z);Yt=c(Io,"Now onto the "),vl=t(Io,"CODE",{});var _c=p(vl);Kt=c(_c,"Dot"),_c.forEach(e),Jt=c(Io," class:"),Io.forEach(e),Ya=i(s),wl=Rl(s,!1),bl=i(s),q(Is.$$.fragment,s),Ka=i(s),v=t(s,"BLOCKQUOTE",{class:!0});var Se=p(v);me=t(Se,"P",{style:!0});var Fc=p(me);Gt=c(Fc,"Try"),Fc.forEach(e),Nt=i(Se),kl=t(Se,"P",{});var Ac=p(kl);Xt=c(Ac,`Try changing the default position of the dots so that they start somewhere other
than the top left! For an extra challenge, see if you can get them to start in the
center of the screen.`),Ac.forEach(e),Zt=i(Se),_l=t(Se,"P",{});var Bc=p(_l);zt=c(Bc,`Try adding another mode or two to the dots! Maybe make an AI mode which chases the other
dot around or a gravity mode which sets acceleration to always be negative and then
lets you try to “fight” against the gravity by changing the acceleration with WASD.`),Bc.forEach(e),Se.forEach(e),Ja=i(s),gs=t(s,"H2",{id:!0});var jc=p(gs);sp=c(jc,"Day 4: Move!"),jc.forEach(e),Ga=i(s),$s=t(s,"H3",{id:!0});var Pc=p($s);ep=c(Pc,"Activity 1: Dinosaur Game Clone (60 mins)"),Pc.forEach(e),Na=i(s),Ce=t(s,"P",{});var Tc=p(Ce);lp=c(Tc,`This activity is difficult! I want you to try each class on your own for 5 minutes.
I’ll go over the Player class 5 minutes into the class.`),Tc.forEach(e),Xa=i(s),Ls=t(s,"H4",{id:!0});var Ic=p(Ls);ap=c(Ic,"Player Class"),Ic.forEach(e),Za=i(s),Ee=t(s,"P",{});var gc=p(Ee);op=c(gc,`Make a player controller for a P5.js rectangle with a player class that lets the player jump.
Also have a drawn function like we learned yesterday. The player should only move up and down,
not left and right.`),gc.forEach(e),za=i(s),I=t(s,"BLOCKQUOTE",{class:!0});var go=p(I);Fl=t(go,"P",{style:!0}),p(Fl).forEach(e),np=i(go),Al=t(go,"P",{});var $c=p(Al);tp=c($c,`A jump can be performed by setting velocity to be a high value while having
acceleration be negative. Then when you hit the bottom of the screen set both velocity
and acceleration to 0.`),$c.forEach(e),go.forEach(e),so=i(s),Ss=t(s,"H4",{id:!0});var Lc=p(Ss);pp=c(Lc,"Cactus/Spike class"),Lc.forEach(e),eo=i(s),ve=t(s,"P",{});var Sc=p(ve);rp=c(Sc,"Make a cactus class that draws a cactus and moves to the left. Have 2-3 cacti that move at different speeds."),Sc.forEach(e),lo=i(s),g=t(s,"BLOCKQUOTE",{class:!0});var $o=p(g);Bl=t($o,"P",{style:!0}),p(Bl).forEach(e),cp=i($o),jl=t($o,"P",{});var xc=p(jl);Dp=c(xc,`You can reuse cacti by teleporting cacti which they reach the far left of the screen
back to the far right of the screen.`),xc.forEach(e),$o.forEach(e),ao=i(s),xs=t(s,"H4",{id:!0});var Oc=p(xs);ip=c(Oc,"Game Loop"),Oc.forEach(e),oo=i(s),Os=t(s,"H5",{id:!0});var Mc=p(Os);yp=c(Mc,"Points"),Mc.forEach(e),no=i(s),we=t(s,"P",{});var qc=p(we);hp=c(qc,`When a cactus gets to the other side of the screen the player should get a point for successfully dodging the cactus. For an extra challenge, make the player get the point as soon as the cactus
passes the player.`),qc.forEach(e),to=i(s),$=t(s,"BLOCKQUOTE",{class:!0});var Lo=p($);Pl=t(Lo,"P",{style:!0}),p(Pl).forEach(e),fp=i(Lo),Ms=t(Lo,"P",{});var So=p(Ms);up=c(So,"You can use a "),Tl=t(So,"CODE",{});var Hc=p(Tl);dp=c(Hc,"this"),Hc.forEach(e),mp=c(So," variable like we did for the 1 dot example from yesterday."),So.forEach(e),Lo.forEach(e),po=i(s),qs=t(s,"H5",{id:!0});var Wc=p(qs);Cp=c(Wc,"Collision Detection/Game Over"),Wc.forEach(e),ro=i(s),be=t(s,"P",{});var Vc=p(be);Ep=c(Vc,"Make a collision detection function that checks if the player is touching the cactus. If the player is touching the cactus, the game should end."),Vc.forEach(e),co=i(s),L=t(s,"BLOCKQUOTE",{class:!0});var xo=p(L);Il=t(xo,"P",{style:!0}),p(Il).forEach(e),vp=i(xo),gl=t(xo,"P",{});var Uc=p(gl);wp=c(Uc,`How can you tell when two rectangles intersect?
Try drawing this out on paper first!`),Uc.forEach(e),xo.forEach(e),Do=i(s),S=t(s,"BLOCKQUOTE",{class:!0});var Oo=p(S);$l=t(Oo,"P",{style:!0}),p($l).forEach(e),bp=i(Oo),Ll=t(Oo,"P",{});var Qc=p(Ll);kp=c(Qc,"Try making an end screen rather than just making the game end."),Qc.forEach(e),Oo.forEach(e),io=i(s),Hs=t(s,"H2",{id:!0});var Rc=p(Hs);_p=c(Rc,"Day 5: Your Turn!"),Rc.forEach(e),yo=i(s),Ws=t(s,"H3",{id:!0});var Yc=p(Ws);Fp=c(Yc,"Draft experiment (5 mins)"),Yc.forEach(e),ho=i(s),ke=t(s,"P",{});var Kc=p(ke);Ap=c(Kc,"Here’s some ideas of projects you could make!"),Kc.forEach(e),fo=i(s),C=t(s,"UL",{});var ts=p(C);_=t(ts,"LI",{});var Ks=p(_);Bp=c(Ks,`A drawing app! Track the mouse using
`),ss=t(Ks,"A",{href:!0,rel:!0,target:!0});var Jc=p(ss);jp=c(Jc,"mouseX"),Jc.forEach(e),Pp=c(Ks,` and
`),es=t(Ks,"A",{href:!0,rel:!0,target:!0});var Gc=p(es);Tp=c(Gc,"mouseY"),Gc.forEach(e),Ip=c(Ks,` and only draw the background
inside of the setup function. That way you can draw a circle wherever the
mouse is on each draw frame.`),Sl=t(Ks,"UL",{});var Nc=p(Sl);_e=t(Nc,"LI",{});var tr=p(_e);gp=c(tr,"Additional challenges:"),Vs=t(tr,"UL",{});var Mo=p(Vs);Fe=t(Mo,"LI",{});var pr=p(Fe);$p=c(pr,`Only draw circles when
`),ls=t(pr,"A",{href:!0,rel:!0,target:!0});var Xc=p(ls);Lp=c(Xc,"mouseIsPressed"),Xc.forEach(e),pr.forEach(e),Sp=i(Mo),xl=t(Mo,"LI",{});var Zc=p(xl);xp=c(Zc,"Let the user select different colors by typing keys on the keyboard."),Zc.forEach(e),Mo.forEach(e),tr.forEach(e),Nc.forEach(e),Ks.forEach(e),Op=i(ts),Ol=t(ts,"LI",{});var zc=p(Ol);Mp=c(zc,`Another game! Maybe a jetpack game where you collect coins (yellow colored circles)?
Maybe something else?`),zc.forEach(e),qp=i(ts),Ae=t(ts,"LI",{});var rr=p(Ae);Hp=c(rr,`Click the button challenge! Teleport a button around the screen and see how
many clicks someone can make in 3600 draw calls. After 3600 draw calls, show
the user an end screen! (3600 draw calls is around 60 seconds).`),Ml=t(rr,"UL",{});var s4=p(Ml);ql=t(s4,"LI",{});var e4=p(ql);Wp=c(e4,`It shouldn’t be too hard to figure out when a point will be inside of a
rectangle after doing the harder version of figuring out when two rectangles
are intersecting from yesterday.`),e4.forEach(e),s4.forEach(e),rr.forEach(e),Vp=i(ts),Be=t(ts,"LI",{});var cr=p(Be);Up=c(cr,"Anything else you can think of!"),Us=t(cr,"UL",{});var qo=p(Us);Hl=t(qo,"LI",{});var l4=p(Hl);Qp=c(l4,"I’ll try to help everyone get progress on their projects as much as I can!"),l4.forEach(e),Rp=i(qo),Qs=t(qo,"LI",{});var Ho=p(Qs);Yp=c(Ho,"Remember! The "),as=t(Ho,"A",{href:!0,rel:!0,target:!0});var a4=p(as);Kp=c(a4,"P5.js docs"),a4.forEach(e),Jp=c(Ho," are your friend!"),Ho.forEach(e),qo.forEach(e),cr.forEach(e),ts.forEach(e),uo=i(s),x=t(s,"BLOCKQUOTE",{class:!0});var Wo=p(x);je=t(Wo,"P",{style:!0});var o4=p(je);Gp=c(o4,"Warning"),o4.forEach(e),Np=i(Wo),Wl=t(Wo,"P",{});var n4=p(Wl);Xp=c(n4,`Make sure to limit the scope of the project! You’ll only have 40 minutes to
make the project, so be sure to get the basic functionality down before focusing
on the smaller less important details.`),n4.forEach(e),Wo.forEach(e),mo=i(s),Rs=t(s,"H3",{id:!0});var t4=p(Rs);Zp=c(t4,"Make project (40 mins)"),t4.forEach(e),Co=i(s),Pe=t(s,"P",{});var p4=p(Pe);zp=c(p4,"Code up the project!"),p4.forEach(e),Eo=i(s),O=t(s,"BLOCKQUOTE",{class:!0});var Vo=p(O);Vl=t(Vo,"P",{style:!0}),p(Vl).forEach(e),sr=i(Vo),Ul=t(Vo,"P",{});var r4=p(Ul);er=c(r4,"Ask for help when you get stuck! We are here to help!"),r4.forEach(e),Vo.forEach(e),vo=i(s),Ys=t(s,"H3",{id:!0});var c4=p(Ys);lr=c(c4,"Share/present projects (15 mins)"),c4.forEach(e),wo=i(s),Te=t(s,"P",{});var D4=p(Te);ar=c(D4,"Share what you’ve made!"),D4.forEach(e),this.h()},h(){y(A,"id","experiment"),E(Js,"font-weight","bold"),y(B,"class","warn"),y(ps,"id","review-intro-to-js"),y(rs,"id","review-html-css-15-mins"),y(Ds,"id","hello-world-with-js-5-mins"),He.a=We,y(is,"id","introduce-js-js-canvas-40-mins"),Ue.a=Qe,E(Re,"font-weight","bold"),y(P,"class","answer"),y(us,"id","p5js-animations"),y(ds,"id","p5js-drawing-15-mins"),E(Ge,"font-weight","bold"),y(T,"class","ask"),y(Cs,"id","p5js-animating-15-mins"),y(K,"href","https://replit.com"),y(K,"rel","noreferrer"),y(K,"target","_blank"),y(J,"href","https://replit.com/@replit/p5js?v=1"),y(J,"rel","noreferrer"),y(J,"target","_blank"),y(vs,"id","p5js-interactivity-30-mins"),y(ws,"id","keyboard-input"),y(ks,"id","mouse-input"),y(Fs,"id","vectors-and-objects"),y(As,"id","vectors-45-mins"),y(Bs,"id","why-learn-vectors"),y(N,"href","https://youtu.be/frLwRLS_ZR0"),y(N,"rel","noreferrer"),y(N,"target","_blank"),E(re,"font-weight","bold"),y(X,"href","https://youtu.be/MOYiVLEnhrw"),y(X,"rel","noreferrer"),y(X,"target","_blank"),y(Z,"href","https://youtu.be/gsZiJeaMO48"),y(Z,"rel","noreferrer"),y(Z,"target","_blank"),y(d,"class","note"),y(Ts,"id","classes-15-mins"),fl.a=ul,Cl.a=El,wl.a=bl,E(me,"font-weight","bold"),y(v,"class","try"),y(gs,"id","move"),y($s,"id","dinosaur-game-clone-60-mins"),y(Ls,"id","player-class"),E(Fl,"font-weight","bold"),y(I,"class","tip"),y(Ss,"id","cactus-spike-class"),E(Bl,"font-weight","bold"),y(g,"class","tip"),y(xs,"id","game-loop"),y(Os,"id","points"),E(Pl,"font-weight","bold"),y($,"class","tip"),y(qs,"id","collision-detection-game-over"),E(Il,"font-weight","bold"),y(L,"class","ask"),E($l,"font-weight","bold"),y(S,"class","try"),y(Hs,"id","your-turn"),y(Ws,"id","draft-experiment-5-mins"),y(ss,"href","https://p5js.org/reference/#/p5/mouseX"),y(ss,"rel","noreferrer"),y(ss,"target","_blank"),y(es,"href","https://p5js.org/reference/#/p5/mouseY"),y(es,"rel","noreferrer"),y(es,"target","_blank"),y(ls,"href","https://p5js.org/reference/#/p5/mouseIsPressed"),y(ls,"rel","noreferrer"),y(ls,"target","_blank"),y(as,"href","https://p5js.org/reference/"),y(as,"rel","noreferrer"),y(as,"target","_blank"),E(je,"font-weight","bold"),y(x,"class","important"),y(Rs,"id","make-project-40-mins"),E(Vl,"font-weight","bold"),y(O,"class","tip"),y(Ys,"id","share-present-projects-15-mins")},m(s,a){o(s,A,a),l(A,Uo),o(s,Yl,a),o(s,B,a),l(B,Js),l(Js,Qo),l(B,Ro),l(B,xe),l(xe,Yo),o(s,Kl,a),o(s,ps,a),l(ps,Ko),o(s,Jl,a),o(s,rs,a),l(rs,Jo),o(s,Gl,a),o(s,Gs,a),l(Gs,Go),o(s,Nl,a),o(s,R,a),l(R,j),l(j,No),l(j,Oe),l(Oe,Xo),l(j,Zo),l(j,Me),l(Me,zo),l(j,sn),l(R,en),l(R,qe),l(qe,ln),o(s,Xl,a),H(cs,s,a),o(s,Zl,a),o(s,Ds,a),l(Ds,an),o(s,zl,a),He.m(y4,s,a),o(s,We,a),o(s,is,a),l(is,on),o(s,sa,a),o(s,Ns,a),l(Ns,nn),o(s,ea,a),H(ys,s,a),o(s,la,a),o(s,Y,a),l(Y,tn),l(Y,Ve),l(Ve,pn),l(Y,rn),o(s,aa,a),Ue.m(h4,s,a),o(s,Qe,a),o(s,Xs,a),l(Xs,cn),o(s,oa,a),o(s,P,a),l(P,Re),l(P,Dn),l(P,hs),l(hs,Ye),l(Ye,yn),l(hs,hn),H(fs,hs,null),o(s,na,a),o(s,us,a),l(us,fn),o(s,ta,a),o(s,ds,a),l(ds,un),o(s,pa,a),o(s,Zs,a),l(Zs,dn),o(s,ra,a),o(s,w,a),l(w,mn),l(w,Ke),l(Ke,Cn),l(w,En),l(w,Je),l(Je,vn),l(w,wn),o(s,ca,a),o(s,T,a),l(T,Ge),l(T,bn),l(T,zs),l(zs,Ne),l(Ne,kn),l(zs,_n),o(s,Da,a),H(ms,s,a),o(s,ia,a),o(s,se,a),l(se,Fn),o(s,ya,a),o(s,Cs,a),l(Cs,An),o(s,ha,a),o(s,ee,a),l(ee,Bn),o(s,fa,a),H(Es,s,a),o(s,ua,a),o(s,b,a),l(b,jn),l(b,K),l(K,Pn),l(b,Tn),l(b,J),l(J,In),l(b,gn),o(s,da,a),o(s,vs,a),l(vs,$n),o(s,ma,a),o(s,le,a),l(le,Ln),o(s,Ca,a),o(s,ae,a),l(ae,Sn),o(s,Ea,a),o(s,oe,a),l(oe,xn),o(s,va,a),o(s,ws,a),l(ws,On),o(s,wa,a),o(s,ne,a),l(ne,Mn),o(s,ba,a),H(bs,s,a),o(s,ka,a),o(s,ks,a),l(ks,qn),o(s,_a,a),o(s,te,a),l(te,Hn),o(s,Fa,a),H(_s,s,a),o(s,Aa,a),o(s,Fs,a),l(Fs,Wn),o(s,Ba,a),o(s,pe,a),l(pe,Vn),o(s,ja,a),o(s,As,a),l(As,Un),o(s,Pa,a),o(s,Bs,a),l(Bs,Qn),o(s,Ta,a),o(s,G,a),l(G,Rn),l(G,N),l(N,Yn),l(G,Kn),o(s,Ia,a),o(s,d,a),l(d,re),l(re,Jn),l(d,Gn),l(d,Xe),l(Xe,Nn),l(d,Xn),l(d,Ze),l(Ze,X),l(X,Zn),l(d,zn),l(d,js),l(js,st),l(js,Z),l(Z,et),l(js,lt),o(s,ga,a),o(s,ce,a),l(ce,at),o(s,$a,a),H(Ps,s,a),o(s,La,a),o(s,De,a),l(De,ot),o(s,Sa,a),o(s,ie,a),l(ie,nt),o(s,xa,a),o(s,ye,a),l(ye,tt),o(s,Oa,a),o(s,m,a),l(m,he),l(he,pt),l(he,ze),l(ze,sl),l(sl,rt),l(m,ct),l(m,el),l(el,Dt),l(m,it),l(m,ll),l(ll,yt),l(m,ht),l(m,al),l(al,ft),o(s,Ma,a),o(s,Ts,a),l(Ts,ut),o(s,qa,a),o(s,fe,a),l(fe,dt),o(s,Ha,a),o(s,ue,a),l(ue,mt),o(s,Wa,a),o(s,de,a),l(de,Ct),o(s,Va,a),o(s,h,a),l(h,Et),l(h,ol),l(ol,vt),l(h,wt),l(h,nl),l(nl,bt),l(h,kt),l(h,tl),l(tl,_t),l(h,Ft),l(h,pl),l(pl,At),l(h,Bt),l(h,rl),l(rl,jt),l(h,Pt),l(h,cl),l(cl,Tt),l(h,It),o(s,Ua,a),o(s,f,a),l(f,gt),l(f,Dl),l(Dl,$t),l(f,Lt),l(f,il),l(il,St),l(f,xt),l(f,yl),l(yl,Ot),l(f,Mt),l(f,hl),l(hl,qt),l(f,Ht),o(s,Qa,a),fl.m(f4,s,a),o(s,ul,a),o(s,k,a),l(k,Wt),l(k,dl),l(dl,Vt),l(k,Ut),l(k,ml),l(ml,Qt),l(k,Rt),o(s,Ra,a),Cl.m(u4,s,a),o(s,El,a),o(s,z,a),l(z,Yt),l(z,vl),l(vl,Kt),l(z,Jt),o(s,Ya,a),wl.m(d4,s,a),o(s,bl,a),H(Is,s,a),o(s,Ka,a),o(s,v,a),l(v,me),l(me,Gt),l(v,Nt),l(v,kl),l(kl,Xt),l(v,Zt),l(v,_l),l(_l,zt),o(s,Ja,a),o(s,gs,a),l(gs,sp),o(s,Ga,a),o(s,$s,a),l($s,ep),o(s,Na,a),o(s,Ce,a),l(Ce,lp),o(s,Xa,a),o(s,Ls,a),l(Ls,ap),o(s,Za,a),o(s,Ee,a),l(Ee,op),o(s,za,a),o(s,I,a),l(I,Fl),l(I,np),l(I,Al),l(Al,tp),o(s,so,a),o(s,Ss,a),l(Ss,pp),o(s,eo,a),o(s,ve,a),l(ve,rp),o(s,lo,a),o(s,g,a),l(g,Bl),l(g,cp),l(g,jl),l(jl,Dp),o(s,ao,a),o(s,xs,a),l(xs,ip),o(s,oo,a),o(s,Os,a),l(Os,yp),o(s,no,a),o(s,we,a),l(we,hp),o(s,to,a),o(s,$,a),l($,Pl),l($,fp),l($,Ms),l(Ms,up),l(Ms,Tl),l(Tl,dp),l(Ms,mp),o(s,po,a),o(s,qs,a),l(qs,Cp),o(s,ro,a),o(s,be,a),l(be,Ep),o(s,co,a),o(s,L,a),l(L,Il),l(L,vp),l(L,gl),l(gl,wp),o(s,Do,a),o(s,S,a),l(S,$l),l(S,bp),l(S,Ll),l(Ll,kp),o(s,io,a),o(s,Hs,a),l(Hs,_p),o(s,yo,a),o(s,Ws,a),l(Ws,Fp),o(s,ho,a),o(s,ke,a),l(ke,Ap),o(s,fo,a),o(s,C,a),l(C,_),l(_,Bp),l(_,ss),l(ss,jp),l(_,Pp),l(_,es),l(es,Tp),l(_,Ip),l(_,Sl),l(Sl,_e),l(_e,gp),l(_e,Vs),l(Vs,Fe),l(Fe,$p),l(Fe,ls),l(ls,Lp),l(Vs,Sp),l(Vs,xl),l(xl,xp),l(C,Op),l(C,Ol),l(Ol,Mp),l(C,qp),l(C,Ae),l(Ae,Hp),l(Ae,Ml),l(Ml,ql),l(ql,Wp),l(C,Vp),l(C,Be),l(Be,Up),l(Be,Us),l(Us,Hl),l(Hl,Qp),l(Us,Rp),l(Us,Qs),l(Qs,Yp),l(Qs,as),l(as,Kp),l(Qs,Jp),o(s,uo,a),o(s,x,a),l(x,je),l(je,Gp),l(x,Np),l(x,Wl),l(Wl,Xp),o(s,mo,a),o(s,Rs,a),l(Rs,Zp),o(s,Co,a),o(s,Pe,a),l(Pe,zp),o(s,Eo,a),o(s,O,a),l(O,Vl),l(O,sr),l(O,Ul),l(Ul,er),o(s,vo,a),o(s,Ys,a),l(Ys,lr),o(s,wo,a),o(s,Te,a),l(Te,ar),bo=!0},p:v4,i(s){bo||(W(cs.$$.fragment,s),W(ys.$$.fragment,s),W(fs.$$.fragment,s),W(ms.$$.fragment,s),W(Es.$$.fragment,s),W(bs.$$.fragment,s),W(_s.$$.fragment,s),W(Ps.$$.fragment,s),W(Is.$$.fragment,s),bo=!0)},o(s){V(cs.$$.fragment,s),V(ys.$$.fragment,s),V(fs.$$.fragment,s),V(ms.$$.fragment,s),V(Es.$$.fragment,s),V(bs.$$.fragment,s),V(_s.$$.fragment,s),V(Ps.$$.fragment,s),V(Is.$$.fragment,s),bo=!1},d(s){s&&e(A),s&&e(Yl),s&&e(B),s&&e(Kl),s&&e(ps),s&&e(Jl),s&&e(rs),s&&e(Gl),s&&e(Gs),s&&e(Nl),s&&e(R),s&&e(Xl),U(cs,s),s&&e(Zl),s&&e(Ds),s&&e(zl),s&&He.d(),s&&e(We),s&&e(is),s&&e(sa),s&&e(Ns),s&&e(ea),U(ys,s),s&&e(la),s&&e(Y),s&&e(aa),s&&Ue.d(),s&&e(Qe),s&&e(Xs),s&&e(oa),s&&e(P),U(fs),s&&e(na),s&&e(us),s&&e(ta),s&&e(ds),s&&e(pa),s&&e(Zs),s&&e(ra),s&&e(w),s&&e(ca),s&&e(T),s&&e(Da),U(ms,s),s&&e(ia),s&&e(se),s&&e(ya),s&&e(Cs),s&&e(ha),s&&e(ee),s&&e(fa),U(Es,s),s&&e(ua),s&&e(b),s&&e(da),s&&e(vs),s&&e(ma),s&&e(le),s&&e(Ca),s&&e(ae),s&&e(Ea),s&&e(oe),s&&e(va),s&&e(ws),s&&e(wa),s&&e(ne),s&&e(ba),U(bs,s),s&&e(ka),s&&e(ks),s&&e(_a),s&&e(te),s&&e(Fa),U(_s,s),s&&e(Aa),s&&e(Fs),s&&e(Ba),s&&e(pe),s&&e(ja),s&&e(As),s&&e(Pa),s&&e(Bs),s&&e(Ta),s&&e(G),s&&e(Ia),s&&e(d),s&&e(ga),s&&e(ce),s&&e($a),U(Ps,s),s&&e(La),s&&e(De),s&&e(Sa),s&&e(ie),s&&e(xa),s&&e(ye),s&&e(Oa),s&&e(m),s&&e(Ma),s&&e(Ts),s&&e(qa),s&&e(fe),s&&e(Ha),s&&e(ue),s&&e(Wa),s&&e(de),s&&e(Va),s&&e(h),s&&e(Ua),s&&e(f),s&&e(Qa),s&&fl.d(),s&&e(ul),s&&e(k),s&&e(Ra),s&&Cl.d(),s&&e(El),s&&e(z),s&&e(Ya),s&&wl.d(),s&&e(bl),U(Is,s),s&&e(Ka),s&&e(v),s&&e(Ja),s&&e(gs),s&&e(Ga),s&&e($s),s&&e(Na),s&&e(Ce),s&&e(Xa),s&&e(Ls),s&&e(Za),s&&e(Ee),s&&e(za),s&&e(I),s&&e(so),s&&e(Ss),s&&e(eo),s&&e(ve),s&&e(lo),s&&e(g),s&&e(ao),s&&e(xs),s&&e(oo),s&&e(Os),s&&e(no),s&&e(we),s&&e(to),s&&e($),s&&e(po),s&&e(qs),s&&e(ro),s&&e(be),s&&e(co),s&&e(L),s&&e(Do),s&&e(S),s&&e(io),s&&e(Hs),s&&e(yo),s&&e(Ws),s&&e(ho),s&&e(ke),s&&e(fo),s&&e(C),s&&e(uo),s&&e(x),s&&e(mo),s&&e(Rs),s&&e(Co),s&&e(Pe),s&&e(Eo),s&&e(O),s&&e(vo),s&&e(Ys),s&&e(wo),s&&e(Te)}}}const _4={title:"Experiment",color:"orange",headings:[{level:1,title:"Experiment",id:"experiment"},{level:2,title:"Day 1: Review + intro to JS",id:"review-intro-to-js"},{level:3,title:"Activity 1: Review HTML + CSS (15 mins)",id:"review-html-css-15-mins"},{level:3,title:"Activity 2: Hello World with JS (5 mins)",id:"hello-world-with-js-5-mins"},{level:3,title:"Activity 3: Introduce JS + JS Canvas (40 mins)",id:"introduce-js-js-canvas-40-mins"},{level:2,title:"Day 2: P5.js animations",id:"p5js-animations"},{level:3,title:"Activity 1: P5.js drawing (15 mins)",id:"p5js-drawing-15-mins"},{level:3,title:"Activity 2: P5.js animating (15 mins)",id:"p5js-animating-15-mins"},{level:3,title:"Activity 3: P5.js interactivity (30 mins)",id:"p5js-interactivity-30-mins"},{level:4,title:"Keyboard Input",id:"keyboard-input"},{level:4,title:"Mouse Input",id:"mouse-input"},{level:2,title:"Day 3: Vectors and Objects!",id:"vectors-and-objects"},{level:3,title:"Lesson 1: Vectors (45 mins)",id:"vectors-45-mins"},{level:4,title:"Why Learn Vectors?",id:"why-learn-vectors"},{level:3,title:"Lesson 2: Classes (15 mins)",id:"classes-15-mins"},{level:2,title:"Day 4: Move!",id:"move"},{level:3,title:"Activity 1: Dinosaur Game Clone (60 mins)",id:"dinosaur-game-clone-60-mins"},{level:4,title:"Player Class",id:"player-class"},{level:4,title:"Cactus/Spike class",id:"cactus-spike-class"},{level:4,title:"Game Loop",id:"game-loop"},{level:5,title:"Points",id:"points"},{level:5,title:"Collision Detection/Game Over",id:"collision-detection-game-over"},{level:2,title:"Day 5: Your Turn!",id:"your-turn"},{level:3,title:"Draft experiment (5 mins)",id:"draft-experiment-5-mins"},{level:3,title:"Make project (40 mins)",id:"make-project-40-mins"},{level:3,title:"Share/present projects (15 mins)",id:"share-present-projects-15-mins"}]};class F4 extends m4{constructor(A){super(),C4(this,A,null,w4,E4,{})}}export{F4 as default,_4 as metadata};
